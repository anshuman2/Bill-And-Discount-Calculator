{"version":3,"sources":["Results.js","Inputs.js","Buttons.js","Calculator.js","App.js","index.js"],"names":["Results","props","tipTotal","parseFloat","billTotal","isNaN","partyCount","className","costPerPerson","toFixed","tipPercentages","Inputs","state","active","keyInput","i","this","setState","getTipPercentage","type","defaultValue","onKeyPress","e","handleKeyPress","disabled","onClick","getPartyCount","map","el","handleStyleChange","handleTipSelect","Component","Buttons","buttons","btn","onClickButton","btnsValue","Calculator","clickedBtn","numberOfPeople","percentages","tipPercent","costPP","bind","updateBillTotal","updatePartyCount","newState","includes","calculateCosts","sum","newTipTotal","newCostPP","newBillTotal","Number","handleInputChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d22ffc0d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Results = (props) => {\r\n\tlet tipTotal = parseFloat(props.tipTotal);\r\n\tlet billTotal = parseFloat(props.billTotal\r\n\t\t);\r\n\tif (isNaN(billTotal)) {\r\n\t\tbillTotal = '';\r\n\t}\r\n\tlet partyCount = props.partyCount;\r\n\treturn (\r\n\t\t<ul className=\"results flex-col\">\r\n\t\t\t<li className=\"cost-pp flex-col\">\r\n\t\t\t\t<span>You owe</span>\r\n\t\t\t\t<span>$ {props.costPerPerson.toFixed(1)}</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"col-2\">\r\n\t\t\t\t<span>Bill</span>\r\n\t\t\t\t<span>$ </span><span>{(billTotal / partyCount).toFixed(1)}</span>\r\n\t\t\t</li>\r\n\t\t\t<li className=\"col-2\">\r\n\t\t\t\t<span>Tip  </span>\r\n\t\t\t\t<span>$ </span><span>{(tipTotal / partyCount).toFixed(1)}</span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t)\r\n}\r\n\r\nexport default Results;","import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nconst tipPercentages = ['5%', '10%', '15%' , '20%'];\r\n\r\nclass Inputs extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tactive: 0,\r\n\t\t\tkeyInput: ''\r\n\t\t};\r\n\t}\r\n\r\n\thandleStyleChange(i) {\r\n\t\tif(this.state.active === i) {\r\n\t\t\treturn 'selected-tipPerc';\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\r\n\thandleTipSelect(i) {\r\n\t\tthis.setState({ active: i });\r\n\t\tthis.props.getTipPercentage(i)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputs flex-row\">\r\n\t\t\t\t<div className=\"bill-total flex-col\">\r\n\t\t\t\t\t<span>Bill Total</span>\r\n\t\t\t\t\t<input type=\"text\" defaultValue={this.props.billTotal} onKeyPress={(e) => this.handleKeyPress(e)}  disabled />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"guest-count flex-row\">\r\n\t\t\t\t\t<div onClick={() => this.props.getPartyCount('minus')}>\r\n\t\t\t\t\t\t<i className=\"icon ion-md-remove\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>{this.props.partyCount} </span>\r\n\t\t\t\t\t\t<i className=\"icon ion-md-person\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div onClick={() => this.props.getPartyCount('add')}>\r\n\t\t\t\t\t\t<i className=\"icon ion-md-add\"></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tip-percent flex-col\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttipPercentages.map((el, i) => (\r\n\t\t\t\t\t\t\t\t<li className={this.handleStyleChange(i)} key={el} onClick={() => this.handleTipSelect(i)}>\r\n\t\t\t\t\t\t\t\t\t{el}\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tip-total flex-col\">\r\n\t\t\t\t\t<span>Tip Total </span>\r\n\t\t\t\t\t<span>$ {this.props.tipTotal.toFixed(2)}</span>\t\r\n\t\t\t\t</div>\t\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t}\r\n}\r\nexport default Inputs;","import React from 'react';\r\n\r\nconst Buttons = (props) => {\r\n\treturn (\r\n\t\t<ul className=\"flex-row keypad\">\r\n\t\t\t{props.buttons.map((btn,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={`btn-${i}`}>\r\n\t\t\t\t\t\t<button onClick={e => props.onClickButton(i)}>{btn}</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\n\r\nimport Results from './Results';\r\nimport Inputs from './Inputs';\r\nimport Buttons from './Buttons';\r\nconst btnsValue = [9,8,7,6,5,4,3,2,1,'.',0,'DEL'];\r\nconst tipPercentages = [.05, .10, .15, .20];\r\n\r\nclass Calculator extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbuttons: btnsValue,\r\n\t\t\tclickedBtn: '',\r\n\t\t\tbillTotal: '',\r\n\t\t\tnumberOfPeople: 1,\r\n\t\t\tpercentages: tipPercentages,\r\n\t\t\ttipPercent: tipPercentages[0],\r\n\t\t\ttipTotal: 0,\r\n\t\t\tcostPP: 0\r\n\t\t};\r\n\r\n\t\tthis.onClickButton = this.onClickButton.bind(this);\r\n\t\tthis.updateBillTotal = this.updateBillTotal.bind(this);\r\n\t\tthis.updatePartyCount = this.updatePartyCount.bind(this);\r\n\t\tthis.getTipPercentage = this.getTipPercentage.bind(this);\r\n\t}\r\n\r\n\tonClickButton(i) {\t\t\t\r\n\t\tthis.setState({\r\n\t\t\tclickedBtn: this.state.buttons[i]\r\n\t\t}, function() {\r\n\t\t\tthis.updateBillTotal(i);\r\n\t\t});\t\r\n\t}\r\n\r\n\tupdateBillTotal(i) {\r\n\t\tlet newState;\r\n\r\n\t\tif(this.state.clickedBtn === '.' && this.state.billTotal.includes('.')) {\t\t\r\n\t\t\treturn null;\r\n\t\t}  \r\n\r\n\t\tif(this.state.clickedBtn !== 'DEL') {\r\n\t\t\tnewState = this.state.billTotal + this.state.clickedBtn;\r\n\t\t\tthis.setState({\r\n\t\t\t\tbillTotal: newState\r\n\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t} else{\r\n\t\t\tnewState = '';\r\n\t\t\tthis.setState({\r\n\t\t\t\tbillTotal: newState,\r\n\t\t\t\tnumberOfPeople: 2,\r\n\t\t\t\ttipTotal: 0,\r\n\t\t\t\tcostPP: 0\r\n\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tupdatePartyCount(sum) {\r\n\t\tlet newState;\r\n\t\tif(sum === 'add') {\r\n\t\t\tnewState = this.state.numberOfPeople + 1;\r\n\t\t\tthis.setState({\r\n\t\t\t\tnumberOfPeople: newState\r\n\t\t\t}, function() {\r\n\t\t\tthis.calculateCosts();\r\n\t\t});\r\n\t\t} else if(sum === 'minus' && this.state.numberOfPeople > 1) {\r\n\t\t\tnewState = this.state.numberOfPeople - 1;\r\n\t\t\tthis.setState({\r\n\t\t\t\tnumberOfPeople: newState\r\n\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnumberOfPeople: this.state.numberOfPeople\r\n\t\t\t\t}, function() {\r\n\t\t\t\tthis.calculateCosts();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tgetTipPercentage(i) {\r\n\t\tlet newState = this.state.percentages[i];\r\n\t\tthis.setState({\r\n\t\t\ttipPercent: newState\r\n\t\t}, function() {\r\n\t\t\tthis.calculateCosts();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcalculateCosts() {\r\n\t\tlet newBillTotal = parseFloat(this.state.billTotal);\r\n\t\tif(!Number.isNaN(newBillTotal)) {\r\n\t\t\tlet newTipTotal, newCostPP;\r\n\t\t\tnewTipTotal = parseFloat(newBillTotal * this.state.tipPercent);\r\n\t\t\tnewCostPP = newBillTotal + newTipTotal; \r\n\t\t\tnewCostPP = newCostPP / this.state.numberOfPeople;\r\n\t    this.setState({\r\n\t\t\ttipTotal: newTipTotal,\r\n\t\t\tcostPP: newCostPP\r\n\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Results \r\n\t\t\t\t\tcostPerPerson={this.state.costPP} \r\n\t\t\t\t\tbillTotal={this.state.billTotal}\r\n\t\t\t\t\ttipTotal={this.state.tipTotal}\r\n\t\t\t\t\tpartyCount={this.state.numberOfPeople} />\r\n\t\t\t\t\t<Inputs \r\n\t\t\t\t\tbillTotal={this.state.billTotal} \r\n\t\t\t\t\ttipTotal={this.state.tipTotal}\r\n\t\t\t\t\tgetPartyCount={this.updatePartyCount} \r\n\t\t\t\t\tpartyCount={this.state.numberOfPeople} \r\n\t\t\t\t\tgetTipPercentage={this.getTipPercentage}\r\n\t\t\t\t\thandleInputChange={this.handleInputChange} />\r\n\t\t\t\t<Buttons onClickButton={this.onClickButton} buttons={this.state.buttons} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport Calculator from './Calculator';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render\n  (<App />,document.getElementById('container'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}